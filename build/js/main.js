"use strict";!function(n){var r={};function e(t){if(r[t])return r[t].exports;var i=r[t]={i:t,l:!1,exports:{}};return n[t].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=n,e.c=r,e.d=function(n,r,t){e.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:t})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,r){if(1&r&&(n=e(n)),8&r)return n;if(4&r&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&r&&"string"!=typeof n)for(var i in n)e.d(t,i,function(r){return n[r]}.bind(null,i));return t},e.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(r,"a",r),r},e.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},e.p="",e(e.s="./src/js/main.js")}({"./src/js/main.js":
/*!************************!*\
    !*** ./src/js/main.js ***!
    \************************/
/*! no static exports found */
function(module,exports){eval("jQuery(document).ready(function ($) {\r\n\r\n    gsap.registerPlugin(ScrollTrigger);\r\n    //gsap.registerPlugin(CSSRulePlugin);\r\n    //gsap.registerPlugin(MorphSVGPlugin);\r\n    gsap.registerPlugin(DrawSVGPlugin);\r\n\r\n\r\n    const sections = document.querySelectorAll(\"section\");\r\n\r\n    function goToSection(section, anim) {\r\n        gsap.to(window, {\r\n            scrollTo: {y: section, autoKill: false},\r\n            duration: 1\r\n        });\r\n\r\n        if (anim) {\r\n            anim.restart();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /*my*/\r\n\r\n    gsap.from('.main-menu', {\r\n        duration: 1, x: '-100%', ease: 'expo',\r\n        onStart: () => {\r\n            if (!($('body').hasClass('leftMenuThin'))) {\r\n                $('.main-menu').addClass('active');\r\n            }\r\n        }\r\n    });\r\n\r\n    gsap.from('.arrow', {\r\n        duration: 2,\r\n        y: -50,\r\n        ease: 'expo',\r\n        stagger: { // wrap advanced options in an object\r\n            each: 0.1,\r\n            ease: \"power2.inOut\",\r\n        }\r\n    });\r\n\r\n    gsap.fromTo('.j_parallaxEl',\r\n        {duration: 2, opacity: 0.9, scale: 1.12, ease: 'expo'},\r\n        {duration: 2, opacity: 1, scale: 1, ease: 'expo'}\r\n    );\r\n\r\n    let menuItemTween = gsap.from(\".menu-item\", {\r\n        autoAlpha: 0,\r\n        x: -100,\r\n        duration: .5,\r\n        stagger: { // wrap advanced options in an object\r\n            each: 0.1,\r\n            ease: Linear.easeNone,\r\n        }\r\n    });\r\n\r\n   /* let menuLogoTween = gsap.from(\".logo\", {\r\n        autoAlpha: 0,\r\n        x: -100,\r\n        duration: 1,\r\n        ease: Linear.easeNone,\r\n    });*/\r\n\r\n/*    let menuLogo2Tween = gsap.from(\".logo-s\", {\r\n        autoAlpha: 0,\r\n        y: -100,\r\n        duration: 0.75,\r\n        ease: Linear.easeNone,\r\n    });*/\r\n   // menuLogo2Tween.pause();\r\n\r\n  /*  let rule = CSSRulePlugin.getRule(\".logo-w::after\");\r\n    let menuBgTween = gsap.from(rule, {\r\n        backgroundPosition: \"-100% 0px\",\r\n        ease: Linear.easeNone,\r\n        duration: 1\r\n    });*/\r\n\r\n\r\n    $(\"#main-menu\").hover(function () {\r\n        if ($('body').hasClass('leftMenuThin')) {\r\n            menuItemTween.restart();\r\n          //  menuLogoTween.restart();\r\n            //menuBgTween.restart();\r\n          //  menuLogo2Tween.reverse();\r\n        }\r\n        $(this).addClass(\"active\");\r\n\r\n    }, function () {\r\n        if ($('body').hasClass('leftMenuThin')) {\r\n            $(this).removeClass(\"active\");\r\n            menuItemTween.reverse().duration(0.3);\r\n          //  menuLogoTween.reverse();\r\n           // menuBgTween.reverse();\r\n          //  menuLogo2Tween.restart();\r\n        }\r\n    });\r\n\r\n\r\n    ScrollTrigger.create({\r\n        start: 'top -80',\r\n        end: 99999,\r\n        onEnter: () => {\r\n            $('body').addClass('leftMenuThin');\r\n            $('.main-menu').removeClass('active');\r\n            menuItemTween.reverse();\r\n           // menuLogoTween.reverse();\r\n           // menuBgTween.reverse();\r\n           // menuLogo2Tween.play();\r\n        },\r\n        onLeaveBack: () => {\r\n            $('body').removeClass('leftMenuThin');\r\n            $('.main-menu').addClass('active');\r\n            menuItemTween.play();\r\n           // menuLogoTween.play();\r\n           // menuBgTween.play();\r\n           // menuLogo2Tween.reverse();\r\n        }\r\n    });\r\n\r\n    ScrollTrigger.create({\r\n        start: 'top -80',\r\n        end: 99999,\r\n        toggleClass: {className: 'visible', targets: '.top-menu'},\r\n    });\r\n\r\n    gsap.fromTo('.j_parallaxEl', {duration: 2, opacity: 1, scale: 1, ease: 'expo'}, {\r\n        scrollTrigger: {\r\n            trigger: '#landing-page',\r\n            start: \"top top\", // when the top of the trigger hits the top of the viewport\r\n            end: \"+=100%\", // end after scrolling 500px beyond the start\r\n            scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n\r\n        },\r\n        scale: 1.12,\r\n        delay: 1\r\n    })\r\n\r\n    function zoomImage(sliderDOM) {\r\n        const slideActive = sliderDOM.find('.swiper-slide-active, .swiper-slide-duplicate-active');\r\n        const imageSlide = slideActive.find('.j_parallaxEl');\r\n\r\n        gsap.fromTo(imageSlide,\r\n            {duration: 2, opacity: 0.9, scale: 1.12, ease: 'expo'},\r\n            {duration: 2, opacity: 1, scale: 1, ease: 'expo'}\r\n        );\r\n    }\r\n\r\n    function moveDownText(sliderDOM) {\r\n        const slideActive = sliderDOM.find('.swiper-slide-active');\r\n        const slideSquare = slideActive.find('.slider-square');\r\n        const slideCaption = slideActive.find('h1');\r\n        const slideDesc = slideActive.find('.j_parlxContent .desc');\r\n\r\n        gsap.set(slideSquare, {autoAlpha: 0});\r\n        gsap.to(slideSquare, {\r\n            duration: 3,\r\n            delay: 0.5,\r\n            ease: Power4.easeOut,\r\n            startAt: {autoAlpha: 0, y: \"50%\", rotationX: -90,},\r\n            autoAlpha: 1,\r\n            y: \"4%\",\r\n            rotationX: 0,\r\n            display: \"flex\"\r\n        });\r\n\r\n        gsap.set(slideCaption, {autoAlpha: 0});\r\n        gsap.to(slideCaption, {\r\n            duration: 3,\r\n            ease: Power4.easeOut,\r\n            startAt: {autoAlpha: 0, y: \"-100%\"},\r\n            autoAlpha: 1,\r\n            y: \"4%\",\r\n            display: \"block\"\r\n        });\r\n\r\n        gsap.set(slideDesc, {autoAlpha: 0});\r\n        gsap.to(slideDesc, {\r\n            duration: 3,\r\n            delay: 0.5,\r\n            ease: Power4.easeOut,\r\n            startAt: {autoAlpha: 0, y: \"-50%\", rotationX: -90,},\r\n            autoAlpha: 1,\r\n            y: \"4%\",\r\n            rotationX: 0,\r\n            display: \"flex\"\r\n        });\r\n\r\n        let tl = gsap.timeline(),\r\n            mySplitText = new SplitText(slideCaption, {type: \"words,chars\"}),\r\n            chars = mySplitText.chars;\r\n\r\n        tl.from(chars, {\r\n            duration: 2,\r\n            opacity: 0,\r\n            y: 80,\r\n            rotationX: 180,\r\n            transformOrigin: \"0% 50% -50\",\r\n            ease: \"expo\",\r\n        }, \"+=0\");\r\n\r\n    }\r\n\r\n\r\n    let bannerSwiper = new Swiper('#panelWrap .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        slidesOffsetAfter: 0,\r\n        slideToClickedSlide: true,\r\n        watchOverflow: true,\r\n        loop: true,\r\n        lazy: {\r\n            loadPrevNext: true\r\n        },\r\n        preloadImages: true,\r\n        speed: 1000,\r\n        navigation: {\r\n            nextEl: '#rightArrow',\r\n            prevEl: '#leftArrow',\r\n        },\r\n        effect: 'fade',\r\n        fadeEffect: {\r\n            crossFade: true\r\n        },\r\n         autoplay: {\r\n             delay: 5000,\r\n         },\r\n        runCallbacksOnInit: true,\r\n        on: {\r\n            init: function () {\r\n                zoomImage(this.$el);\r\n                moveDownText(this.$el);\r\n            },\r\n            slideNextTransitionStart: function () {\r\n                zoomImage(this.$el);\r\n                moveDownText(this.$el);\r\n            },\r\n            slidePrevTransitionStart: function () {\r\n                zoomImage(this.$el);\r\n                moveDownText(this.$el);\r\n            }\r\n        }\r\n    })\r\n\r\n    $(\".a_scrollto\").click(function (e) {\r\n        e.preventDefault();\r\n        let $anchor = $(this).attr('href');\r\n        let offset = $($anchor).offset().top;\r\n        TweenLite.to(window, 1, {scrollTo: {y: offset}});\r\n    })\r\n\r\n    let locationSwiper = new Swiper('#section2 .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        slidesOffsetAfter: 0,\r\n        slideToClickedSlide: true,\r\n        watchOverflow: true,\r\n        loop: true,\r\n        lazy: {\r\n            loadPrevNext: true\r\n        },\r\n        preloadImages: true,\r\n        speed: 1000,\r\n        navigation: {\r\n            nextEl: '#rightArrow2',\r\n            prevEl: '#leftArrow2',\r\n        },\r\n        effect: 'fade',\r\n        fadeEffect: {\r\n            crossFade: true\r\n        },\r\n        /* autoplay: {\r\n             delay: 5000,\r\n         },*/\r\n        runCallbacksOnInit: true,\r\n        on: {\r\n            init: function () {\r\n                zoomImage(this.$el);\r\n            },\r\n            slideNextTransitionStart: function () {\r\n                zoomImage(this.$el);\r\n            },\r\n            slidePrevTransitionStart: function () {\r\n                zoomImage(this.$el);\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    let card2Swiper = new Swiper('.card2 .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        slidesOffsetAfter: 0,\r\n        slideToClickedSlide: true,\r\n        watchOverflow: true,\r\n        loop: true,\r\n        lazy: {\r\n            loadPrevNext: true\r\n        },\r\n        preloadImages: true,\r\n        speed: 1000,\r\n        navigation: {\r\n            nextEl: '#rightArrow3',\r\n            prevEl: '#leftArrow3',\r\n        },\r\n        effect: 'fade',\r\n        fadeEffect: {\r\n            crossFade: true\r\n        },\r\n    })\r\n    let card3Swiper = new Swiper('.card3 .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        slidesOffsetAfter: 0,\r\n        slideToClickedSlide: true,\r\n        watchOverflow: true,\r\n        loop: true,\r\n        lazy: {\r\n            loadPrevNext: true\r\n        },\r\n        preloadImages: true,\r\n        speed: 1000,\r\n        navigation: {\r\n            nextEl: '#rightArrow4',\r\n            prevEl: '#leftArrow4',\r\n        },\r\n        effect: 'fade',\r\n        fadeEffect: {\r\n            crossFade: true\r\n        },\r\n    })\r\n\r\n    let card4Swiper = new Swiper('.card4 .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        slidesOffsetAfter: 0,\r\n        slideToClickedSlide: true,\r\n        watchOverflow: true,\r\n        loop: true,\r\n        lazy: {\r\n            loadPrevNext: true\r\n        },\r\n        preloadImages: true,\r\n        speed: 1000,\r\n        navigation: {\r\n            nextEl: '#rightArrow5',\r\n            prevEl: '#leftArrow5',\r\n        },\r\n        effect: 'fade',\r\n        fadeEffect: {\r\n            crossFade: true\r\n        },\r\n    })\r\n\r\n    let card5Swiper = new Swiper('.card5 .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        slidesOffsetAfter: 0,\r\n        slideToClickedSlide: true,\r\n        watchOverflow: true,\r\n        loop: true,\r\n        lazy: {\r\n            loadPrevNext: true\r\n        },\r\n        preloadImages: true,\r\n        speed: 1000,\r\n        navigation: {\r\n            nextEl: '#rightArrow6',\r\n            prevEl: '#leftArrow6',\r\n        },\r\n        effect: 'fade',\r\n        fadeEffect: {\r\n            crossFade: true\r\n        },\r\n    });\r\n\r\n    let sec9Swiper = new Swiper('#section9 .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 0,\r\n        slidesOffsetAfter: 0,\r\n        slideToClickedSlide: true,\r\n        watchOverflow: true,\r\n        loop: false,\r\n        lazy: {\r\n            loadPrevNext: true\r\n        },\r\n        preloadImages: true,\r\n        speed: 1000,\r\n        navigation: {\r\n            nextEl: '#rightArrow9',\r\n            prevEl: '#leftArrow9',\r\n        },\r\n        effect: 'fade',\r\n        fadeEffect: {\r\n            crossFade: true\r\n        },\r\n        runCallbacksOnInit: true,\r\n        on: {\r\n            slideNextTransitionStart: function () {\r\n                $('#section9 .slide-desc ul li').removeClass('active');\r\n                $('#section9 .slide-desc ul').find('li').eq(this.activeIndex).addClass('active');\r\n            },\r\n            slidePrevTransitionStart: function () {\r\n                $('#section9 .slide-desc ul li').removeClass('active');\r\n                $('#section9 .slide-desc ul').find('li').eq(this.activeIndex).addClass('active');\r\n            }\r\n        }\r\n    });\r\n\r\n    $('.map--legend li').hover(function () {\r\n        let $dataPoint = $(this).attr('data-point');\r\n        let $linePoint = $(this).attr('data-point') + '-line';\r\n        $('.panomap').find($dataPoint).addClass('active');\r\n        $('.panomap').find($linePoint).addClass('active');\r\n    }, function () {\r\n        let $dataPoint = $(this).attr('data-point');\r\n        let $linePoint = $(this).attr('data-point') + '-line';\r\n        $('.panomap').find($dataPoint).removeClass('active');\r\n        $('.panomap').find($linePoint).removeClass('active');\r\n    });\r\n\r\n    $('.map-point').hover(function () {\r\n        let $dataPoint = $(this).attr('data-point');\r\n        console.log($dataPoint);\r\n        let $linePoint = $(this).attr('data-point') + '-line';\r\n        $('.map--legend').find('li[data-point=\"' + $dataPoint + '\"]').addClass('active');\r\n        $('.panomap').find($linePoint).addClass('active');\r\n    }, function () {\r\n        let $dataPoint = $(this).attr('data-point');\r\n        let $linePoint = $(this).attr('data-point') + '-line';\r\n        $('.panomap').find($linePoint).removeClass('active');\r\n        $('.map--legend').find('li[data-point=\"' + $dataPoint + '\"]').removeClass('active');\r\n    });\r\n\r\n\r\n    const filterScroll = function () {\r\n        $('.j-filter-scrollbar-wrapper .scrollbar-inner').scrollbar({\r\n            //autoScrollSize:!1,\r\n            autoUpdate: true,\r\n            disableBodyScroll: false\r\n        });\r\n    };\r\n    /*запускаем кастом скролл при загрузке документа*/\r\n    filterScroll();\r\n\r\n    let panomapTween1 = gsap.from(\".panomap1\", {\r\n        scale: 1.12,\r\n        duration: 0.75,\r\n        ease: Linear.easeNone,\r\n        onComplete: ()=>{\r\n            Line();\r\n            $(\"#svg-line\").addClass('active');\r\n        }\r\n    });\r\n    panomapTween1.play();\r\n\r\n    let panomapTween2 = gsap.from(\".panomap2\", {\r\n        scale: 1.12,\r\n        duration: 0.75,\r\n        ease: Linear.easeNone,\r\n        onComplete: ()=>{\r\n            $(\"#svg-line\").removeClass('active');\r\n        }\r\n    });\r\n    panomapTween2.pause();\r\n\r\n    $('.switcher').click(function (e) {\r\n        e.preventDefault();\r\n        if ($(this).hasClass('left')) {\r\n            console.log('has left');\r\n            $(this).removeClass('left');\r\n            $('.panomap1, .switcher-w .left').removeClass('active');\r\n            $('.panomap2, .switcher-w .right').addClass('active');\r\n            panomapTween1.reverse();\r\n            panomapTween2.restart();\r\n            Line();\r\n        } else {\r\n            console.log('has not left');\r\n            $(this).addClass('left');\r\n            $('.panomap1, .switcher-w .left').addClass('active');\r\n            $('.panomap2, .switcher-w .right').removeClass('active');\r\n            panomapTween2.reverse();\r\n            panomapTween1.restart();\r\n            Line();\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    let shapes3 = \"#anim-desk path, #anim-desk rect, #anim-cleaning path, #anim-cleaning rect, #anim-video path, #anim-video rect\",\r\n        tl3 = gsap.timeline({\r\n            repeat:1,\r\n            yoyo:true,\r\n            scrollTrigger:  {\r\n                trigger: \"#section5\",\r\n                start: \"-=50% top\", // when the top of the trigger hits the top of the viewport\r\n                end: \"+=100%\", // end after scrolling 500px beyond the start\r\n                scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n\r\n            }\r\n        });\r\n\r\n    tl3.fromTo(shapes3, {drawSVG:\"0 0\"}, {duration: 2, drawSVG:\"100%\"});\r\n\r\n/*    let shapes = \"#anim-cleaning path, #anim-cleaning rect\",\r\n        tl = gsap.timeline({\r\n            repeat:1,\r\n            yoyo:true,\r\n            scrollTrigger:  {\r\n                trigger: \"#section5\",\r\n                start: \"-=50% top\", // when the top of the trigger hits the top of the viewport\r\n                end: \"bottom bottom\", // end after scrolling 500px beyond the start\r\n                scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n\r\n            }\r\n        });\r\n\r\n    tl.to(shapes, {drawSVG:\"0 0\"}, {duration: 1, drawSVG:\"100%\"});\r\n\r\n    let shapes2 = \"#anim-video path, #anim-video rect\",\r\n        tl2 = gsap.timeline({\r\n            repeat:1,\r\n            yoyo:true,\r\n            scrollTrigger:  {\r\n                trigger: \"#section5\",\r\n                start: \"-=50% top\", // when the top of the trigger hits the top of the viewport\r\n                end: \"bottom bottom\", // end after scrolling 500px beyond the start\r\n                scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n\r\n            }\r\n        });\r\n\r\n    tl2.to(shapes2, {drawSVG:\"0 0\"}, {duration: 1, drawSVG:\"100%\"});*/\r\n\r\n\r\n    let shapes4 = \"#anim-kind path\",\r\n        tl4 = gsap.timeline({\r\n            repeat:1,\r\n            yoyo:true,\r\n            scrollTrigger:  {\r\n                trigger: \"#card2\",\r\n                start: \"-=50% top\", // when the top of the trigger hits the top of the viewport\r\n                end: \"bottom bottom\", // end after scrolling 500px beyond the start\r\n                scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n\r\n            }\r\n        });\r\n\r\n    tl4.to(shapes4, {drawSVG:\"0 0\"}, {duration: 1, drawSVG:\"100%\"});\r\n\r\n\r\n\r\n    let cardsAnim = gsap.to(\".cards:not(:last-child)\", {\r\n        yPercent: -100,\r\n        ease: \"power1.inOut\",\r\n        stagger: 0.5,\r\n        scrollTrigger: {\r\n            trigger: \"#uniqPage\",\r\n            start: \"top top\",\r\n            end: \"+=300%\",\r\n            scrub: true,\r\n            pin: true\r\n        }\r\n    });\r\n\r\n    gsap.fromTo('#section6 .j_parallaxEl', {duration: 2, opacity: 1, scale: 1, ease: 'expo'}, {\r\n        scrollTrigger: {\r\n            trigger: '#section6',\r\n            start: \"-=70%\", // when the top of the trigger hits the top of the viewport\r\n            end: \"+=130%\", // end after scrolling 500px beyond the start\r\n            scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n        },\r\n        scale: 1.12,\r\n        delay: 1\r\n    });\r\n\r\n    gsap.fromTo('#section7 .j_parallaxEl', {duration: 2, opacity: 1, scale: 1, ease: 'expo'}, {\r\n        scrollTrigger: {\r\n            trigger: '#section7',\r\n            start: \"-=70%\", // when the top of the trigger hits the top of the viewport\r\n            end: \"+=130%\", // end after scrolling 500px beyond the start\r\n            scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n        },\r\n        scale: 1.12,\r\n        delay: 1\r\n    });\r\n\r\n    gsap.fromTo('#section8 .j_parallaxEl', {duration: 2, opacity: 1, scale: 1, ease: 'expo'}, {\r\n        scrollTrigger: {\r\n            trigger: '#section8',\r\n            start: \"-=70%\", // when the top of the trigger hits the top of the viewport\r\n            end: \"+=130%\", // end after scrolling 500px beyond the start\r\n            scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n        },\r\n        scale: 1.12,\r\n        delay: 1\r\n    });\r\n\r\n\r\n    $(\".apart-switcher-wrap li\").click(function (){\r\n       let dataPlan = $(this).data(\"plan\");\r\n       $(\".plan-img\").removeClass(\"active\");\r\n       $(\".plan-desc\").removeClass(\"active\");\r\n       $(\".apart-switcher-wrap li\").removeClass(\"active\");\r\n       $(\".plan-img[data-plan=\"+dataPlan+\"]\").addClass(\"active\");\r\n       $(\".plan-desc[data-plan=\"+dataPlan+\"]\").addClass(\"active\");\r\n       $(this).addClass(\"active\");\r\n    });\r\n\r\n\r\n});\r\n\r\n\r\nfunction Line() {\r\n\r\n    let wrap = $('.panomap');\r\n\r\n    let item1 = wrap.find('.map-point1'),\r\n        num1 = wrap.find('.map-logo'),\r\n        num1X = num1.position().left + num1.width() / 2,\r\n        num1Y = num1.position().top + num1.height() / 2,\r\n        item1X = item1.position().left + item1.width() / 2,\r\n        item1Y = item1.position().top + item1.height() / 2;\r\n\r\n    let item2 = wrap.find('.map-point2'),\r\n        num2 = wrap.find('.map-logo'),\r\n        num2X = num2.position().left + num2.width() / 2,\r\n        num2Y = num2.position().top + num2.height() / 2,\r\n        item2X = item2.position().left + item2.width() / 2,\r\n        item2Y = item2.position().top + item2.height() / 2;\r\n\r\n    let item3 = wrap.find('.map-point3'),\r\n        num3 = wrap.find('.map-logo'),\r\n        num3X = num3.position().left + num3.width() / 2,\r\n        num3Y = num3.position().top + num3.height() / 2,\r\n        item3X = item3.position().left + item3.width() / 2,\r\n        item3Y = item3.position().top + item3.height() / 2;\r\n\r\n    let item4 = wrap.find('.map-point4'),\r\n        num4 = wrap.find('.map-logo'),\r\n        num4X = num4.position().left + num4.width() / 2,\r\n        num4Y = num4.position().top + num4.height() / 2,\r\n        item4X = item4.position().left + item4.width() / 2,\r\n        item4Y = item4.position().top + item4.height() / 2;\r\n\r\n    let item5 = wrap.find('.map-point5'),\r\n        num5 = wrap.find('.map-logo'),\r\n        num5X = num5.position().left + num5.width() / 2,\r\n        num5Y = num5.position().top + num5.height() / 2,\r\n        item5X = item5.position().left + item5.width() / 2,\r\n        item5Y = item5.position().top + item5.height() / 2;\r\n\r\n    let item6 = wrap.find('.map-point6'),\r\n        num6 = wrap.find('.map-logo'),\r\n        num6X = num6.position().left + num6.width() / 2,\r\n        num6Y = num6.position().top + num6.height() / 2,\r\n        item6X = item6.position().left + item6.width() / 2,\r\n        item6Y = item6.position().top + item6.height() / 2;\r\n\r\n    let item7 = wrap.find('.map-point7'),\r\n        num7 = wrap.find('.map-logo'),\r\n        num7X = num7.position().left + num7.width() / 2,\r\n        num7Y = num7.position().top + num7.height() / 2,\r\n        item7X = item7.position().left + item7.width() / 2,\r\n        item7Y = item7.position().top + item7.height() / 2;\r\n\r\n\r\n    let svg = $('#svg-line');\r\n\r\n    let line1 = svg.find('.line-1'),\r\n        line2 = svg.find('.line-2'),\r\n        line3 = svg.find('.line-3'),\r\n        line4 = svg.find('.line-4'),\r\n        line5 = svg.find('.line-5'),\r\n        line6 = svg.find('.line-6'),\r\n        line7 = svg.find('.line-7');\r\n\r\n    line1.attr({'x1': num1X, 'y1': num1Y, 'x2': item1X, 'y2': item1Y});\r\n    line2.attr({'x1': num2X, 'y1': num2Y, 'x2': item2X, 'y2': item2Y});\r\n    line3.attr({'x1': num3X, 'y1': num3Y, 'x2': item3X, 'y2': item3Y});\r\n    line4.attr({'x1': num4X, 'y1': num4Y, 'x2': item4X, 'y2': item4Y});\r\n    line5.attr({'x1': num5X, 'y1': num5Y, 'x2': item5X, 'y2': item5Y});\r\n    line6.attr({'x1': num6X, 'y1': num6Y, 'x2': item6X, 'y2': item6Y});\r\n    line7.attr({'x1': num7X, 'y1': num7Y, 'x2': item7X, 'y2': item7Y});\r\n}\r\n\r\n$(window).on('load resize', function () {\r\n    Line();\r\n});\r\n\n\n//# sourceURL=webpack:///./src/js/main.js?")}});
//# sourceMappingURL=main.js.map
